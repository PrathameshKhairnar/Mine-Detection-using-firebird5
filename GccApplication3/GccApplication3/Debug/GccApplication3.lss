
GccApplication3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800200  00000438  000004cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000438  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800210  00800210  000004dc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004dc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000050c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  0000054c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000019b0  00000000  00000000  0000060c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d07  00000000  00000000  00001fbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008ea  00000000  00000000  00002cc3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000018c  00000000  00000000  000035b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000066f  00000000  00000000  0000373c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b5b  00000000  00000000  00003dab  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00004906  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	04 c1       	rjmp	.+520    	; 0x272 <__vector_26>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e8 e3       	ldi	r30, 0x38	; 56
  fc:	f4 e0       	ldi	r31, 0x04	; 4
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a0 31       	cpi	r26, 0x10	; 16
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a0 e1       	ldi	r26, 0x10	; 16
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a1 31       	cpi	r26, 0x11	; 17
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	d4 d0       	rcall	.+424    	; 0x2c8 <main>
 120:	89 c1       	rjmp	.+786    	; 0x434 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <motion_set>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 124:	92 b1       	in	r25, 0x02	; 2
 126:	90 7f       	andi	r25, 0xF0	; 240
 128:	8f 70       	andi	r24, 0x0F	; 15
 12a:	98 2b       	or	r25, r24
 12c:	92 b9       	out	0x02, r25	; 2
 12e:	08 95       	ret

00000130 <forward>:
 130:	86 e0       	ldi	r24, 0x06	; 6
 132:	f8 cf       	rjmp	.-16     	; 0x124 <motion_set>
 134:	08 95       	ret

00000136 <left>:
 136:	85 e0       	ldi	r24, 0x05	; 5
 138:	f5 cf       	rjmp	.-22     	; 0x124 <motion_set>
 13a:	08 95       	ret

0000013c <right>:
 13c:	8a e0       	ldi	r24, 0x0A	; 10
 13e:	f2 cf       	rjmp	.-28     	; 0x124 <motion_set>
 140:	08 95       	ret

00000142 <stop>:
 142:	80 e0       	ldi	r24, 0x00	; 0
 144:	ef cf       	rjmp	.-34     	; 0x124 <motion_set>
 146:	08 95       	ret

00000148 <lcd_port_config>:
 148:	87 b1       	in	r24, 0x07	; 7
 14a:	87 6f       	ori	r24, 0xF7	; 247
 14c:	87 b9       	out	0x07, r24	; 7
 14e:	88 b1       	in	r24, 0x08	; 8
 150:	80 78       	andi	r24, 0x80	; 128
 152:	88 b9       	out	0x08, r24	; 8
 154:	08 95       	ret

00000156 <lcd_wr_command>:
 156:	98 b1       	in	r25, 0x08	; 8
 158:	9f 70       	andi	r25, 0x0F	; 15
 15a:	98 b9       	out	0x08, r25	; 8
 15c:	98 b1       	in	r25, 0x08	; 8
 15e:	28 2f       	mov	r18, r24
 160:	20 7f       	andi	r18, 0xF0	; 240
 162:	92 2b       	or	r25, r18
 164:	98 b9       	out	0x08, r25	; 8
 166:	40 98       	cbi	0x08, 0	; 8
 168:	41 98       	cbi	0x08, 1	; 8
 16a:	42 9a       	sbi	0x08, 2	; 8
 16c:	ef ef       	ldi	r30, 0xFF	; 255
 16e:	f7 e4       	ldi	r31, 0x47	; 71
 170:	31 97       	sbiw	r30, 0x01	; 1
 172:	f1 f7       	brne	.-4      	; 0x170 <lcd_wr_command+0x1a>
 174:	00 c0       	rjmp	.+0      	; 0x176 <lcd_wr_command+0x20>
 176:	00 00       	nop
 178:	42 98       	cbi	0x08, 2	; 8
 17a:	98 b1       	in	r25, 0x08	; 8
 17c:	9f 70       	andi	r25, 0x0F	; 15
 17e:	98 b9       	out	0x08, r25	; 8
 180:	98 b1       	in	r25, 0x08	; 8
 182:	82 95       	swap	r24
 184:	80 7f       	andi	r24, 0xF0	; 240
 186:	89 2b       	or	r24, r25
 188:	88 b9       	out	0x08, r24	; 8
 18a:	40 98       	cbi	0x08, 0	; 8
 18c:	41 98       	cbi	0x08, 1	; 8
 18e:	42 9a       	sbi	0x08, 2	; 8
 190:	8f ef       	ldi	r24, 0xFF	; 255
 192:	97 e4       	ldi	r25, 0x47	; 71
 194:	01 97       	sbiw	r24, 0x01	; 1
 196:	f1 f7       	brne	.-4      	; 0x194 <lcd_wr_command+0x3e>
 198:	00 c0       	rjmp	.+0      	; 0x19a <lcd_wr_command+0x44>
 19a:	00 00       	nop
 19c:	42 98       	cbi	0x08, 2	; 8
 19e:	08 95       	ret

000001a0 <lcd_wr_char>:
 1a0:	98 b1       	in	r25, 0x08	; 8
 1a2:	9f 70       	andi	r25, 0x0F	; 15
 1a4:	98 b9       	out	0x08, r25	; 8
 1a6:	98 b1       	in	r25, 0x08	; 8
 1a8:	28 2f       	mov	r18, r24
 1aa:	20 7f       	andi	r18, 0xF0	; 240
 1ac:	92 2b       	or	r25, r18
 1ae:	98 b9       	out	0x08, r25	; 8
 1b0:	40 9a       	sbi	0x08, 0	; 8
 1b2:	41 98       	cbi	0x08, 1	; 8
 1b4:	42 9a       	sbi	0x08, 2	; 8
 1b6:	ef ef       	ldi	r30, 0xFF	; 255
 1b8:	f7 e4       	ldi	r31, 0x47	; 71
 1ba:	31 97       	sbiw	r30, 0x01	; 1
 1bc:	f1 f7       	brne	.-4      	; 0x1ba <lcd_wr_char+0x1a>
 1be:	00 c0       	rjmp	.+0      	; 0x1c0 <lcd_wr_char+0x20>
 1c0:	00 00       	nop
 1c2:	42 98       	cbi	0x08, 2	; 8
 1c4:	98 b1       	in	r25, 0x08	; 8
 1c6:	9f 70       	andi	r25, 0x0F	; 15
 1c8:	98 b9       	out	0x08, r25	; 8
 1ca:	98 b1       	in	r25, 0x08	; 8
 1cc:	82 95       	swap	r24
 1ce:	80 7f       	andi	r24, 0xF0	; 240
 1d0:	89 2b       	or	r24, r25
 1d2:	88 b9       	out	0x08, r24	; 8
 1d4:	40 9a       	sbi	0x08, 0	; 8
 1d6:	41 98       	cbi	0x08, 1	; 8
 1d8:	42 9a       	sbi	0x08, 2	; 8
 1da:	8f ef       	ldi	r24, 0xFF	; 255
 1dc:	97 e4       	ldi	r25, 0x47	; 71
 1de:	01 97       	sbiw	r24, 0x01	; 1
 1e0:	f1 f7       	brne	.-4      	; 0x1de <lcd_wr_char+0x3e>
 1e2:	00 c0       	rjmp	.+0      	; 0x1e4 <lcd_wr_char+0x44>
 1e4:	00 00       	nop
 1e6:	42 98       	cbi	0x08, 2	; 8
 1e8:	08 95       	ret

000001ea <lcd_string>:
 1ea:	cf 93       	push	r28
 1ec:	df 93       	push	r29
 1ee:	ec 01       	movw	r28, r24
 1f0:	88 81       	ld	r24, Y
 1f2:	88 23       	and	r24, r24
 1f4:	29 f0       	breq	.+10     	; 0x200 <lcd_string+0x16>
 1f6:	21 96       	adiw	r28, 0x01	; 1
 1f8:	d3 df       	rcall	.-90     	; 0x1a0 <lcd_wr_char>
 1fa:	89 91       	ld	r24, Y+
 1fc:	81 11       	cpse	r24, r1
 1fe:	fc cf       	rjmp	.-8      	; 0x1f8 <lcd_string+0xe>
 200:	df 91       	pop	r29
 202:	cf 91       	pop	r28
 204:	08 95       	ret

00000206 <lcd_init>:
 206:	86 e6       	ldi	r24, 0x66	; 102
 208:	9e e0       	ldi	r25, 0x0E	; 14
 20a:	01 97       	sbiw	r24, 0x01	; 1
 20c:	f1 f7       	brne	.-4      	; 0x20a <lcd_init+0x4>
 20e:	00 00       	nop
 210:	88 e2       	ldi	r24, 0x28	; 40
 212:	a1 df       	rcall	.-190    	; 0x156 <lcd_wr_command>
 214:	81 e0       	ldi	r24, 0x01	; 1
 216:	9f df       	rcall	.-194    	; 0x156 <lcd_wr_command>
 218:	86 e0       	ldi	r24, 0x06	; 6
 21a:	9d df       	rcall	.-198    	; 0x156 <lcd_wr_command>
 21c:	8e e0       	ldi	r24, 0x0E	; 14
 21e:	9b df       	rcall	.-202    	; 0x156 <lcd_wr_command>
 220:	80 e8       	ldi	r24, 0x80	; 128
 222:	99 cf       	rjmp	.-206    	; 0x156 <lcd_wr_command>
 224:	08 95       	ret

00000226 <port_init>:
 226:	80 e4       	ldi	r24, 0x40	; 64
 228:	84 b9       	out	0x04, r24	; 4
 22a:	8e df       	rcall	.-228    	; 0x148 <lcd_port_config>
 22c:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
 230:	81 b1       	in	r24, 0x01	; 1
 232:	8f 60       	ori	r24, 0x0F	; 15
 234:	81 b9       	out	0x01, r24	; 1
 236:	82 b1       	in	r24, 0x02	; 2
 238:	80 7f       	andi	r24, 0xF0	; 240
 23a:	82 b9       	out	0x02, r24	; 2
 23c:	ea e0       	ldi	r30, 0x0A	; 10
 23e:	f1 e0       	ldi	r31, 0x01	; 1
 240:	80 81       	ld	r24, Z
 242:	88 61       	ori	r24, 0x18	; 24
 244:	80 83       	st	Z, r24
 246:	eb e0       	ldi	r30, 0x0B	; 11
 248:	f1 e0       	ldi	r31, 0x01	; 1
 24a:	80 81       	ld	r24, Z
 24c:	88 61       	ori	r24, 0x18	; 24
 24e:	80 83       	st	Z, r24
 250:	08 95       	ret

00000252 <uart0_init>:
 252:	e1 ec       	ldi	r30, 0xC1	; 193
 254:	f0 e0       	ldi	r31, 0x00	; 0
 256:	10 82       	st	Z, r1
 258:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
 25c:	86 e0       	ldi	r24, 0x06	; 6
 25e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
 262:	8f e5       	ldi	r24, 0x5F	; 95
 264:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 268:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 26c:	88 e9       	ldi	r24, 0x98	; 152
 26e:	80 83       	st	Z, r24
 270:	08 95       	ret

00000272 <__vector_26>:
 272:	1f 92       	push	r1
 274:	0f 92       	push	r0
 276:	0f b6       	in	r0, 0x3f	; 63
 278:	0f 92       	push	r0
 27a:	11 24       	eor	r1, r1
 27c:	0b b6       	in	r0, 0x3b	; 59
 27e:	0f 92       	push	r0
 280:	8f 93       	push	r24
 282:	ef 93       	push	r30
 284:	ff 93       	push	r31
 286:	e6 ec       	ldi	r30, 0xC6	; 198
 288:	f0 e0       	ldi	r31, 0x00	; 0
 28a:	80 81       	ld	r24, Z
 28c:	80 93 10 02 	sts	0x0210, r24	; 0x800210 <__data_end>
 290:	80 83       	st	Z, r24
 292:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <__data_end>
 296:	87 33       	cpi	r24, 0x37	; 55
 298:	09 f4       	brne	.+2      	; 0x29c <__vector_26+0x2a>
 29a:	15 b8       	out	0x05, r1	; 5
 29c:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <__data_end>
 2a0:	89 33       	cpi	r24, 0x39	; 57
 2a2:	11 f4       	brne	.+4      	; 0x2a8 <__vector_26+0x36>
 2a4:	80 e4       	ldi	r24, 0x40	; 64
 2a6:	85 b9       	out	0x05, r24	; 5
 2a8:	ff 91       	pop	r31
 2aa:	ef 91       	pop	r30
 2ac:	8f 91       	pop	r24
 2ae:	0f 90       	pop	r0
 2b0:	0b be       	out	0x3b, r0	; 59
 2b2:	0f 90       	pop	r0
 2b4:	0f be       	out	0x3f, r0	; 63
 2b6:	0f 90       	pop	r0
 2b8:	1f 90       	pop	r1
 2ba:	18 95       	reti

000002bc <init_devices>:
 2bc:	f8 94       	cli
 2be:	b3 df       	rcall	.-154    	; 0x226 <port_init>
 2c0:	a2 df       	rcall	.-188    	; 0x206 <lcd_init>
 2c2:	c7 df       	rcall	.-114    	; 0x252 <uart0_init>
 2c4:	78 94       	sei
 2c6:	08 95       	ret

000002c8 <main>:

//Main Function
int main(void)
{
	
	init_devices();
 2c8:	f9 df       	rcall	.-14     	; 0x2bc <init_devices>
	//lcd_string(data);
	lcd_string("GPS DATA:");
 2ca:	80 e0       	ldi	r24, 0x00	; 0
 2cc:	92 e0       	ldi	r25, 0x02	; 2
 2ce:	8d df       	rcall	.-230    	; 0x1ea <lcd_string>
	lcd_wr_command(0xc0);
 2d0:	80 ec       	ldi	r24, 0xC0	; 192
 2d2:	41 df       	rcall	.-382    	; 0x156 <lcd_wr_command>
	lcd_string("LAT:");
 2d4:	8a e0       	ldi	r24, 0x0A	; 10
 2d6:	92 e0       	ldi	r25, 0x02	; 2
 2d8:	88 df       	rcall	.-240    	; 0x1ea <lcd_string>
 2da:	2f ef       	ldi	r18, 0xFF	; 255
 2dc:	3f ef       	ldi	r19, 0xFF	; 255
 2de:	8c e2       	ldi	r24, 0x2C	; 44
 2e0:	21 50       	subi	r18, 0x01	; 1
 2e2:	30 40       	sbci	r19, 0x00	; 0
 2e4:	80 40       	sbci	r24, 0x00	; 0
 2e6:	e1 f7       	brne	.-8      	; 0x2e0 <main+0x18>
 2e8:	00 c0       	rjmp	.+0      	; 0x2ea <main+0x22>
 2ea:	00 00       	nop
		
	
	while (PINJ0 == 0)
	{
			
			forward(); //both wheels forward
 2ec:	21 df       	rcall	.-446    	; 0x130 <forward>
 2ee:	9f ef       	ldi	r25, 0xFF	; 255
 2f0:	2f ef       	ldi	r18, 0xFF	; 255
 2f2:	3b ed       	ldi	r19, 0xDB	; 219
 2f4:	85 e0       	ldi	r24, 0x05	; 5
 2f6:	91 50       	subi	r25, 0x01	; 1
 2f8:	20 40       	sbci	r18, 0x00	; 0
 2fa:	30 40       	sbci	r19, 0x00	; 0
 2fc:	80 40       	sbci	r24, 0x00	; 0
 2fe:	d9 f7       	brne	.-10     	; 0x2f6 <main+0x2e>
 300:	00 c0       	rjmp	.+0      	; 0x302 <main+0x3a>
 302:	00 00       	nop
			_delay_ms(40000);

			stop();
 304:	1e df       	rcall	.-452    	; 0x142 <stop>
 306:	9f ef       	ldi	r25, 0xFF	; 255
 308:	2f ef       	ldi	r18, 0xFF	; 255
 30a:	30 ee       	ldi	r19, 0xE0	; 224
 30c:	91 50       	subi	r25, 0x01	; 1
 30e:	20 40       	sbci	r18, 0x00	; 0
 310:	30 40       	sbci	r19, 0x00	; 0
 312:	e1 f7       	brne	.-8      	; 0x30c <main+0x44>
 314:	00 c0       	rjmp	.+0      	; 0x316 <main+0x4e>
 316:	00 00       	nop
			_delay_ms(5000);
			left(); //Left wheel backward, Right wheel forward
 318:	0e df       	rcall	.-484    	; 0x136 <left>
 31a:	8f ef       	ldi	r24, 0xFF	; 255
 31c:	9f ef       	ldi	r25, 0xFF	; 255
 31e:	21 ec       	ldi	r18, 0xC1	; 193
 320:	31 e0       	ldi	r19, 0x01	; 1
 322:	81 50       	subi	r24, 0x01	; 1
 324:	90 40       	sbci	r25, 0x00	; 0
 326:	20 40       	sbci	r18, 0x00	; 0
 328:	30 40       	sbci	r19, 0x00	; 0
 32a:	d9 f7       	brne	.-10     	; 0x322 <main+0x5a>
 32c:	00 c0       	rjmp	.+0      	; 0x32e <main+0x66>
 32e:	00 00       	nop
			_delay_ms(12000);

			stop();
 330:	08 df       	rcall	.-496    	; 0x142 <stop>
 332:	8f ef       	ldi	r24, 0xFF	; 255
 334:	9f ef       	ldi	r25, 0xFF	; 255
 336:	20 ee       	ldi	r18, 0xE0	; 224
 338:	81 50       	subi	r24, 0x01	; 1
 33a:	90 40       	sbci	r25, 0x00	; 0
 33c:	20 40       	sbci	r18, 0x00	; 0
 33e:	e1 f7       	brne	.-8      	; 0x338 <main+0x70>
 340:	00 c0       	rjmp	.+0      	; 0x342 <main+0x7a>
 342:	00 00       	nop
			_delay_ms(5000);
			forward(); //both wheels forward
 344:	f5 de       	rcall	.-534    	; 0x130 <forward>
 346:	3f ef       	ldi	r19, 0xFF	; 255
 348:	8f ef       	ldi	r24, 0xFF	; 255
 34a:	90 ee       	ldi	r25, 0xE0	; 224
 34c:	31 50       	subi	r19, 0x01	; 1
 34e:	80 40       	sbci	r24, 0x00	; 0
 350:	90 40       	sbci	r25, 0x00	; 0
 352:	e1 f7       	brne	.-8      	; 0x34c <main+0x84>
 354:	00 c0       	rjmp	.+0      	; 0x356 <main+0x8e>
 356:	00 00       	nop
			_delay_ms(5000);

			stop();
 358:	f4 de       	rcall	.-536    	; 0x142 <stop>
 35a:	2f ef       	ldi	r18, 0xFF	; 255
 35c:	3f ef       	ldi	r19, 0xFF	; 255
 35e:	80 ee       	ldi	r24, 0xE0	; 224
 360:	21 50       	subi	r18, 0x01	; 1
 362:	30 40       	sbci	r19, 0x00	; 0
 364:	80 40       	sbci	r24, 0x00	; 0
 366:	e1 f7       	brne	.-8      	; 0x360 <main+0x98>
 368:	00 c0       	rjmp	.+0      	; 0x36a <main+0xa2>
 36a:	00 00       	nop
			_delay_ms(5000);
			left(); //Left wheel backward, Right wheel forward
 36c:	e4 de       	rcall	.-568    	; 0x136 <left>
 36e:	9f ef       	ldi	r25, 0xFF	; 255
 370:	2f ef       	ldi	r18, 0xFF	; 255
 372:	31 ec       	ldi	r19, 0xC1	; 193
 374:	81 e0       	ldi	r24, 0x01	; 1
 376:	91 50       	subi	r25, 0x01	; 1
 378:	20 40       	sbci	r18, 0x00	; 0
 37a:	30 40       	sbci	r19, 0x00	; 0
 37c:	80 40       	sbci	r24, 0x00	; 0
 37e:	d9 f7       	brne	.-10     	; 0x376 <main+0xae>
 380:	00 c0       	rjmp	.+0      	; 0x382 <main+0xba>
 382:	00 00       	nop
			_delay_ms(12000);

			stop();
 384:	de de       	rcall	.-580    	; 0x142 <stop>
 386:	9f ef       	ldi	r25, 0xFF	; 255
 388:	2f ef       	ldi	r18, 0xFF	; 255
 38a:	30 ee       	ldi	r19, 0xE0	; 224
 38c:	91 50       	subi	r25, 0x01	; 1
 38e:	20 40       	sbci	r18, 0x00	; 0
 390:	30 40       	sbci	r19, 0x00	; 0
 392:	e1 f7       	brne	.-8      	; 0x38c <main+0xc4>
 394:	00 c0       	rjmp	.+0      	; 0x396 <main+0xce>
 396:	00 00       	nop
 398:	cb de       	rcall	.-618    	; 0x130 <forward>
			_delay_ms(5000);
			forward(); //both wheels forward
 39a:	8f ef       	ldi	r24, 0xFF	; 255
 39c:	9f ef       	ldi	r25, 0xFF	; 255
 39e:	2b ed       	ldi	r18, 0xDB	; 219
 3a0:	35 e0       	ldi	r19, 0x05	; 5
 3a2:	81 50       	subi	r24, 0x01	; 1
 3a4:	90 40       	sbci	r25, 0x00	; 0
 3a6:	20 40       	sbci	r18, 0x00	; 0
 3a8:	30 40       	sbci	r19, 0x00	; 0
 3aa:	d9 f7       	brne	.-10     	; 0x3a2 <main+0xda>
 3ac:	00 c0       	rjmp	.+0      	; 0x3ae <main+0xe6>
			_delay_ms(40000);

			stop();
 3ae:	00 00       	nop
 3b0:	c8 de       	rcall	.-624    	; 0x142 <stop>
 3b2:	8f ef       	ldi	r24, 0xFF	; 255
 3b4:	9f ef       	ldi	r25, 0xFF	; 255
 3b6:	20 ee       	ldi	r18, 0xE0	; 224
 3b8:	81 50       	subi	r24, 0x01	; 1
 3ba:	90 40       	sbci	r25, 0x00	; 0
 3bc:	20 40       	sbci	r18, 0x00	; 0
 3be:	e1 f7       	brne	.-8      	; 0x3b8 <main+0xf0>
 3c0:	00 c0       	rjmp	.+0      	; 0x3c2 <main+0xfa>
			_delay_ms(5000);
			stop();
 3c2:	00 00       	nop
 3c4:	be de       	rcall	.-644    	; 0x142 <stop>
			right(); //Left wheel backward, Right wheel forward
 3c6:	ba de       	rcall	.-652    	; 0x13c <right>
 3c8:	3f ef       	ldi	r19, 0xFF	; 255
 3ca:	8f e7       	ldi	r24, 0x7F	; 127
 3cc:	91 e5       	ldi	r25, 0x51	; 81
 3ce:	21 e0       	ldi	r18, 0x01	; 1
 3d0:	31 50       	subi	r19, 0x01	; 1
 3d2:	80 40       	sbci	r24, 0x00	; 0
 3d4:	90 40       	sbci	r25, 0x00	; 0
 3d6:	20 40       	sbci	r18, 0x00	; 0
 3d8:	d9 f7       	brne	.-10     	; 0x3d0 <main+0x108>
 3da:	00 c0       	rjmp	.+0      	; 0x3dc <main+0x114>
 3dc:	00 00       	nop
			_delay_ms(9000);
			forward(); //both wheels forward
 3de:	a8 de       	rcall	.-688    	; 0x130 <forward>
 3e0:	3f ef       	ldi	r19, 0xFF	; 255
 3e2:	8f ef       	ldi	r24, 0xFF	; 255
 3e4:	90 ee       	ldi	r25, 0xE0	; 224
 3e6:	31 50       	subi	r19, 0x01	; 1
 3e8:	80 40       	sbci	r24, 0x00	; 0
 3ea:	90 40       	sbci	r25, 0x00	; 0
 3ec:	e1 f7       	brne	.-8      	; 0x3e6 <main+0x11e>
 3ee:	00 c0       	rjmp	.+0      	; 0x3f0 <main+0x128>
 3f0:	00 00       	nop
			_delay_ms(5000);

			stop();
 3f2:	a7 de       	rcall	.-690    	; 0x142 <stop>
 3f4:	2f ef       	ldi	r18, 0xFF	; 255
 3f6:	3f ef       	ldi	r19, 0xFF	; 255
 3f8:	80 ee       	ldi	r24, 0xE0	; 224
 3fa:	21 50       	subi	r18, 0x01	; 1
 3fc:	30 40       	sbci	r19, 0x00	; 0
 3fe:	80 40       	sbci	r24, 0x00	; 0
 400:	e1 f7       	brne	.-8      	; 0x3fa <main+0x132>
 402:	00 c0       	rjmp	.+0      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 404:	00 00       	nop
			_delay_ms(5000);

			stop();
 406:	9d de       	rcall	.-710    	; 0x142 <stop>
 408:	9f ef       	ldi	r25, 0xFF	; 255
 40a:	2f ef       	ldi	r18, 0xFF	; 255
 40c:	30 ee       	ldi	r19, 0xE0	; 224
 40e:	91 50       	subi	r25, 0x01	; 1
 410:	20 40       	sbci	r18, 0x00	; 0
 412:	30 40       	sbci	r19, 0x00	; 0
 414:	e1 f7       	brne	.-8      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 416:	00 c0       	rjmp	.+0      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 418:	00 00       	nop
 41a:	90 de       	rcall	.-736    	; 0x13c <right>
			_delay_ms(5000);
			right(); //Left wheel backward, Right wheel forward
 41c:	8f ef       	ldi	r24, 0xFF	; 255
 41e:	9f ef       	ldi	r25, 0xFF	; 255
 420:	21 ec       	ldi	r18, 0xC1	; 193
 422:	31 e0       	ldi	r19, 0x01	; 1
 424:	81 50       	subi	r24, 0x01	; 1
 426:	90 40       	sbci	r25, 0x00	; 0
 428:	20 40       	sbci	r18, 0x00	; 0
 42a:	30 40       	sbci	r19, 0x00	; 0
 42c:	d9 f7       	brne	.-10     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 42e:	00 c0       	rjmp	.+0      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 430:	00 00       	nop
 432:	5c cf       	rjmp	.-328    	; 0x2ec <main+0x24>

00000434 <_exit>:
 434:	f8 94       	cli

00000436 <__stop_program>:
 436:	ff cf       	rjmp	.-2      	; 0x436 <__stop_program>
