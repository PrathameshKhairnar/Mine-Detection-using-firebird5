
GccApplication3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800200  000002ea  0000037e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002ea  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800220  00800220  0000039e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000039e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003d0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  00000410  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001627  00000000  00000000  000004d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cf6  00000000  00000000  00001af7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000785  00000000  00000000  000027ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000018c  00000000  00000000  00002f74  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000066f  00000000  00000000  00003100  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007b2  00000000  00000000  0000376f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00003f21  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	f2 c0       	rjmp	.+484    	; 0x24e <__vector_26>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ea ee       	ldi	r30, 0xEA	; 234
  fc:	f2 e0       	ldi	r31, 0x02	; 2
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a0 32       	cpi	r26, 0x20	; 32
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a0 e2       	ldi	r26, 0x20	; 32
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a1 32       	cpi	r26, 0x21	; 33
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	c2 d0       	rcall	.+388    	; 0x2a4 <main>
 120:	e2 c0       	rjmp	.+452    	; 0x2e6 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <lcd_port_config>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 124:	87 b1       	in	r24, 0x07	; 7
 126:	87 6f       	ori	r24, 0xF7	; 247
 128:	87 b9       	out	0x07, r24	; 7
 12a:	88 b1       	in	r24, 0x08	; 8
 12c:	80 78       	andi	r24, 0x80	; 128
 12e:	88 b9       	out	0x08, r24	; 8
 130:	08 95       	ret

00000132 <lcd_wr_command>:
 132:	98 b1       	in	r25, 0x08	; 8
 134:	9f 70       	andi	r25, 0x0F	; 15
 136:	98 b9       	out	0x08, r25	; 8
 138:	98 b1       	in	r25, 0x08	; 8
 13a:	28 2f       	mov	r18, r24
 13c:	20 7f       	andi	r18, 0xF0	; 240
 13e:	92 2b       	or	r25, r18
 140:	98 b9       	out	0x08, r25	; 8
 142:	40 98       	cbi	0x08, 0	; 8
 144:	41 98       	cbi	0x08, 1	; 8
 146:	42 9a       	sbi	0x08, 2	; 8
 148:	ef ef       	ldi	r30, 0xFF	; 255
 14a:	f7 e4       	ldi	r31, 0x47	; 71
 14c:	31 97       	sbiw	r30, 0x01	; 1
 14e:	f1 f7       	brne	.-4      	; 0x14c <lcd_wr_command+0x1a>
 150:	00 c0       	rjmp	.+0      	; 0x152 <lcd_wr_command+0x20>
 152:	00 00       	nop
 154:	42 98       	cbi	0x08, 2	; 8
 156:	98 b1       	in	r25, 0x08	; 8
 158:	9f 70       	andi	r25, 0x0F	; 15
 15a:	98 b9       	out	0x08, r25	; 8
 15c:	98 b1       	in	r25, 0x08	; 8
 15e:	82 95       	swap	r24
 160:	80 7f       	andi	r24, 0xF0	; 240
 162:	89 2b       	or	r24, r25
 164:	88 b9       	out	0x08, r24	; 8
 166:	40 98       	cbi	0x08, 0	; 8
 168:	41 98       	cbi	0x08, 1	; 8
 16a:	42 9a       	sbi	0x08, 2	; 8
 16c:	8f ef       	ldi	r24, 0xFF	; 255
 16e:	97 e4       	ldi	r25, 0x47	; 71
 170:	01 97       	sbiw	r24, 0x01	; 1
 172:	f1 f7       	brne	.-4      	; 0x170 <lcd_wr_command+0x3e>
 174:	00 c0       	rjmp	.+0      	; 0x176 <lcd_wr_command+0x44>
 176:	00 00       	nop
 178:	42 98       	cbi	0x08, 2	; 8
 17a:	08 95       	ret

0000017c <lcd_wr_char>:
 17c:	98 b1       	in	r25, 0x08	; 8
 17e:	9f 70       	andi	r25, 0x0F	; 15
 180:	98 b9       	out	0x08, r25	; 8
 182:	98 b1       	in	r25, 0x08	; 8
 184:	28 2f       	mov	r18, r24
 186:	20 7f       	andi	r18, 0xF0	; 240
 188:	92 2b       	or	r25, r18
 18a:	98 b9       	out	0x08, r25	; 8
 18c:	40 9a       	sbi	0x08, 0	; 8
 18e:	41 98       	cbi	0x08, 1	; 8
 190:	42 9a       	sbi	0x08, 2	; 8
 192:	ef ef       	ldi	r30, 0xFF	; 255
 194:	f7 e4       	ldi	r31, 0x47	; 71
 196:	31 97       	sbiw	r30, 0x01	; 1
 198:	f1 f7       	brne	.-4      	; 0x196 <lcd_wr_char+0x1a>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <lcd_wr_char+0x20>
 19c:	00 00       	nop
 19e:	42 98       	cbi	0x08, 2	; 8
 1a0:	98 b1       	in	r25, 0x08	; 8
 1a2:	9f 70       	andi	r25, 0x0F	; 15
 1a4:	98 b9       	out	0x08, r25	; 8
 1a6:	98 b1       	in	r25, 0x08	; 8
 1a8:	82 95       	swap	r24
 1aa:	80 7f       	andi	r24, 0xF0	; 240
 1ac:	89 2b       	or	r24, r25
 1ae:	88 b9       	out	0x08, r24	; 8
 1b0:	40 9a       	sbi	0x08, 0	; 8
 1b2:	41 98       	cbi	0x08, 1	; 8
 1b4:	42 9a       	sbi	0x08, 2	; 8
 1b6:	8f ef       	ldi	r24, 0xFF	; 255
 1b8:	97 e4       	ldi	r25, 0x47	; 71
 1ba:	01 97       	sbiw	r24, 0x01	; 1
 1bc:	f1 f7       	brne	.-4      	; 0x1ba <lcd_wr_char+0x3e>
 1be:	00 c0       	rjmp	.+0      	; 0x1c0 <lcd_wr_char+0x44>
 1c0:	00 00       	nop
 1c2:	42 98       	cbi	0x08, 2	; 8
 1c4:	08 95       	ret

000001c6 <lcd_string>:
 1c6:	cf 93       	push	r28
 1c8:	df 93       	push	r29
 1ca:	ec 01       	movw	r28, r24
 1cc:	88 81       	ld	r24, Y
 1ce:	88 23       	and	r24, r24
 1d0:	29 f0       	breq	.+10     	; 0x1dc <lcd_string+0x16>
 1d2:	21 96       	adiw	r28, 0x01	; 1
 1d4:	d3 df       	rcall	.-90     	; 0x17c <lcd_wr_char>
 1d6:	89 91       	ld	r24, Y+
 1d8:	81 11       	cpse	r24, r1
 1da:	fc cf       	rjmp	.-8      	; 0x1d4 <lcd_string+0xe>
 1dc:	df 91       	pop	r29
 1de:	cf 91       	pop	r28
 1e0:	08 95       	ret

000001e2 <lcd_init>:
 1e2:	86 e6       	ldi	r24, 0x66	; 102
 1e4:	9e e0       	ldi	r25, 0x0E	; 14
 1e6:	01 97       	sbiw	r24, 0x01	; 1
 1e8:	f1 f7       	brne	.-4      	; 0x1e6 <lcd_init+0x4>
 1ea:	00 00       	nop
 1ec:	88 e2       	ldi	r24, 0x28	; 40
 1ee:	a1 df       	rcall	.-190    	; 0x132 <lcd_wr_command>
 1f0:	81 e0       	ldi	r24, 0x01	; 1
 1f2:	9f df       	rcall	.-194    	; 0x132 <lcd_wr_command>
 1f4:	86 e0       	ldi	r24, 0x06	; 6
 1f6:	9d df       	rcall	.-198    	; 0x132 <lcd_wr_command>
 1f8:	8e e0       	ldi	r24, 0x0E	; 14
 1fa:	9b df       	rcall	.-202    	; 0x132 <lcd_wr_command>
 1fc:	80 e8       	ldi	r24, 0x80	; 128
 1fe:	99 cf       	rjmp	.-206    	; 0x132 <lcd_wr_command>
 200:	08 95       	ret

00000202 <port_init>:
 202:	80 e4       	ldi	r24, 0x40	; 64
 204:	84 b9       	out	0x04, r24	; 4
 206:	8e df       	rcall	.-228    	; 0x124 <lcd_port_config>
 208:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
 20c:	81 b1       	in	r24, 0x01	; 1
 20e:	8f 60       	ori	r24, 0x0F	; 15
 210:	81 b9       	out	0x01, r24	; 1
 212:	82 b1       	in	r24, 0x02	; 2
 214:	80 7f       	andi	r24, 0xF0	; 240
 216:	82 b9       	out	0x02, r24	; 2
 218:	ea e0       	ldi	r30, 0x0A	; 10
 21a:	f1 e0       	ldi	r31, 0x01	; 1
 21c:	80 81       	ld	r24, Z
 21e:	88 61       	ori	r24, 0x18	; 24
 220:	80 83       	st	Z, r24
 222:	eb e0       	ldi	r30, 0x0B	; 11
 224:	f1 e0       	ldi	r31, 0x01	; 1
 226:	80 81       	ld	r24, Z
 228:	88 61       	ori	r24, 0x18	; 24
 22a:	80 83       	st	Z, r24
 22c:	08 95       	ret

0000022e <uart0_init>:
 22e:	e1 ec       	ldi	r30, 0xC1	; 193
 230:	f0 e0       	ldi	r31, 0x00	; 0
 232:	10 82       	st	Z, r1
 234:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
 238:	86 e0       	ldi	r24, 0x06	; 6
 23a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
 23e:	8f e5       	ldi	r24, 0x5F	; 95
 240:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 244:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 248:	88 e9       	ldi	r24, 0x98	; 152
 24a:	80 83       	st	Z, r24
 24c:	08 95       	ret

0000024e <__vector_26>:
 24e:	1f 92       	push	r1
 250:	0f 92       	push	r0
 252:	0f b6       	in	r0, 0x3f	; 63
 254:	0f 92       	push	r0
 256:	11 24       	eor	r1, r1
 258:	0b b6       	in	r0, 0x3b	; 59
 25a:	0f 92       	push	r0
 25c:	8f 93       	push	r24
 25e:	ef 93       	push	r30
 260:	ff 93       	push	r31
 262:	e6 ec       	ldi	r30, 0xC6	; 198
 264:	f0 e0       	ldi	r31, 0x00	; 0
 266:	80 81       	ld	r24, Z
 268:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <__data_end>
 26c:	80 83       	st	Z, r24
 26e:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <__data_end>
 272:	87 33       	cpi	r24, 0x37	; 55
 274:	09 f4       	brne	.+2      	; 0x278 <__vector_26+0x2a>
 276:	15 b8       	out	0x05, r1	; 5
 278:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <__data_end>
 27c:	89 33       	cpi	r24, 0x39	; 57
 27e:	11 f4       	brne	.+4      	; 0x284 <__vector_26+0x36>
 280:	80 e4       	ldi	r24, 0x40	; 64
 282:	85 b9       	out	0x05, r24	; 5
 284:	ff 91       	pop	r31
 286:	ef 91       	pop	r30
 288:	8f 91       	pop	r24
 28a:	0f 90       	pop	r0
 28c:	0b be       	out	0x3b, r0	; 59
 28e:	0f 90       	pop	r0
 290:	0f be       	out	0x3f, r0	; 63
 292:	0f 90       	pop	r0
 294:	1f 90       	pop	r1
 296:	18 95       	reti

00000298 <init_devices>:
 298:	f8 94       	cli
 29a:	b3 df       	rcall	.-154    	; 0x202 <port_init>
 29c:	a2 df       	rcall	.-188    	; 0x1e2 <lcd_init>
 29e:	c7 df       	rcall	.-114    	; 0x22e <uart0_init>
 2a0:	78 94       	sei
 2a2:	08 95       	ret

000002a4 <main>:

//Main Function
int main(void)
{
	
	init_devices();
 2a4:	f9 df       	rcall	.-14     	; 0x298 <init_devices>
	//lcd_string(data);
	lcd_string("GPS DATA:");
 2a6:	80 e0       	ldi	r24, 0x00	; 0
 2a8:	92 e0       	ldi	r25, 0x02	; 2
 2aa:	8d df       	rcall	.-230    	; 0x1c6 <lcd_string>
	lcd_wr_command(0xc0);
 2ac:	80 ec       	ldi	r24, 0xC0	; 192
 2ae:	41 df       	rcall	.-382    	; 0x132 <lcd_wr_command>
	lcd_string("LAT:");
 2b0:	8a e0       	ldi	r24, 0x0A	; 10
 2b2:	92 e0       	ldi	r25, 0x02	; 2
 2b4:	88 df       	rcall	.-240    	; 0x1c6 <lcd_string>
 2b6:	2f ef       	ldi	r18, 0xFF	; 255
 2b8:	8f ef       	ldi	r24, 0xFF	; 255
 2ba:	9c e2       	ldi	r25, 0x2C	; 44
 2bc:	21 50       	subi	r18, 0x01	; 1
 2be:	80 40       	sbci	r24, 0x00	; 0
 2c0:	90 40       	sbci	r25, 0x00	; 0
 2c2:	e1 f7       	brne	.-8      	; 0x2bc <main+0x18>
 2c4:	00 c0       	rjmp	.+0      	; 0x2c6 <main+0x22>
 2c6:	00 00       	nop
		
		
	}
	else
	{
		lcd_string("Threat  detected");
 2c8:	8f e0       	ldi	r24, 0x0F	; 15
 2ca:	92 e0       	ldi	r25, 0x02	; 2
 2cc:	7c df       	rcall	.-264    	; 0x1c6 <lcd_string>
 2ce:	2f ef       	ldi	r18, 0xFF	; 255
 2d0:	8f e7       	ldi	r24, 0x7F	; 127
 2d2:	94 e0       	ldi	r25, 0x04	; 4
 2d4:	21 50       	subi	r18, 0x01	; 1
 2d6:	80 40       	sbci	r24, 0x00	; 0
 2d8:	90 40       	sbci	r25, 0x00	; 0
 2da:	e1 f7       	brne	.-8      	; 0x2d4 <main+0x30>
 2dc:	00 c0       	rjmp	.+0      	; 0x2de <main+0x3a>
 2de:	00 00       	nop
		_delay_ms(100);
		lcd_wr_command(0x01);
 2e0:	81 e0       	ldi	r24, 0x01	; 1
 2e2:	27 df       	rcall	.-434    	; 0x132 <lcd_wr_command>
 2e4:	f1 cf       	rjmp	.-30     	; 0x2c8 <main+0x24>

000002e6 <_exit>:
 2e6:	f8 94       	cli

000002e8 <__stop_program>:
 2e8:	ff cf       	rjmp	.-2      	; 0x2e8 <__stop_program>
